//Component
import { Container, Col, Button, Form, InputGroup} from 'react-bootstrap';
import { useState} from 'react';
import axios from 'axios';

function Filters(props){

    const [locationCandidate, setLocationCandidate] = useState(null)
    const [selectedDate, setSelectedDate] = useState("")
    const [selectedCategories, setSelectedCategories] = useState("")
    
    //Âãï„Åè„Åë„Å©„ÄÅAPIÂÆüË£ÖÊñπÊ≥ïÈÅï„ÅÜ„Åã„ÇÇ„Åó„Çå„Å™„ÅÑ„ÄÇÊ§úÁ¥¢Âæå„Å´URL„ÅåÂ§â„Çè„Çâ„Å™„ÅÑ„Åì„Å®„Å´„Çà„ÇãÂºäÂÆ≥„ÅØ„Å™„ÅÑ„ÅãÊ≥®ÊÑè„Åó„Å¶„Åä„Åè„ÄÇ
    const handleClickFetchFilteredEvent = async () => {
        try {
            const date = selectedDate ? `date=${selectedDate}` : "";
            const category = selectedCategories ? `category=${selectedCategories}` : "";
            // const other = selectedOthers ? `category=${selectedOthers` : "";
            const response = await axios.get(`/api/events?${date}&${category}`)
            const filteredEvents = response.data;
            props.setEvents(filteredEvents);
        } catch(error){
            console.log(error)
        }
    }

    return (
        <Form className="filters-container">
            <Col>
                <Col md>
                  <Form.Group>
                    <Form.Label>„É≠„Ç±„Éº„Ç∑„Éß„É≥„ÅßÊ§úÁ¥¢</Form.Label>
                    <InputGroup>
                        <Form.Control
                            id = "location-candidate"
                            onChange={(e) => { setLocationCandidate(e.target.value) }} 
                            placeholder="‰æãÔºöÊ∏ãË∞∑Âå∫" />
                        <InputGroup.Append>
                            <Button 
                                variant="outline-secondary"
                                onClick = {()=>{
                                    props.setCurrentLocation("abled");
                                    document.getElementById('location-candidate').value = ""; //ÂÖ•ÂäõÂÄ§„Çí„É™„Çª„ÉÉ„Éà(Form.Control„ÅÆ„Éú„ÉÉ„ÇØ„Çπ„Åã„Çâ)
                                    setLocationCandidate("") //ÂÖ•ÂäõÂÄ§„Çí„É™„Çª„ÉÉ„Éà(„Çπ„ÉÜ„Éº„ÉàÊÉÖÂ†±„Åã„Çâ)
                                    props.setSelectedLocation("") //ÂÖ•ÂäõÂÄ§„Çí„É™„Çª„ÉÉ„Éà(„Çπ„ÉÜ„Éº„ÉàÊÉÖÂ†±„Åã„Çâ)
                                }
                            }
                            >
                                ÁèæÂú®Âú∞ üß≠
                            </Button>
                        </InputGroup.Append>
                    </InputGroup>
                  </Form.Group>
                </Col>
                <Col md>
                  <Form.Group>
                    <Form.Label>Êó•ÊôÇ„ÅßÊ§úÁ¥¢</Form.Label>
                    <Form.Control 
                        onChange={(e) => {setSelectedDate(e.target.value)}} 
                        type="date" />
                  </Form.Group>
                </Col>
                <Col md>
                  <Form.Group>
                    <Form.Label>„Ç∏„É£„É≥„É´„ÅßÊ§úÁ¥¢</Form.Label>
                    {/* „Éè„Éº„Éâ„Ç≥„Éº„Éá„Ç£„É≥„Ç∞„ÄÇÊúÄÁµÇÁöÑ„Å´„ÅØevent.category„Å´ÁΩÆ„ÅçÊèõ„Åà„Çã */}
                    {["„Ç§„Éô„É≥„Éà","„Çπ„Éù„ÉÉ„Éà"].map((category) => (
                        <div key={category} className="mb-2">
                        <Form.Check 
                            type="switch" 
                            id={`filter-checkbox-${category}`}
                        >
                            <Form.Check.Input type="checkbox" />
                            <Form.Check.Label 
                                onClick = {() => {
                                    if (!selectedCategories.includes(category)){ //Êó¢„Å´ÈÅ∏Êäû„Åï„Çå„Å¶„ÅÑ„ÅüÂ†¥Âêà
                                        setSelectedCategories([...selectedCategories,category]);
                                    } else if (selectedCategories.includes(category)) { //Êú™ÈÅ∏Êäû„ÅÆÂ†¥Âêà
                                        selectedCategories.splice(selectedCategories.indexOf(category),1);
                                        setSelectedCategories([...selectedCategories])
                                    }
                                }}
                            >
                                {category}
                            </Form.Check.Label>
                        </Form.Check>
                        </div>
                    ))}
                  </Form.Group>
                </Col>
            </Col>
            <Container style={{display:"flex"}}>    
            <Button 
                onClick={()=>{ 
                    props.setSelectedLocation(locationCandidate); // Map„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Å´Ê∏°„Åó„ÅüAPI„Å®„ÅØÈñ¢‰øÇ„Å™„Åó„Å´auto focus„Åô„Çã
                    props.setCurrentLocation("disabled"); //„É≠„Ç±„Éº„Ç∑„Éß„É≥Ê§úÁ¥¢„Åó„ÅüÂ†¥Âêà„ÅØ‰∏ÄÂ∫¶ÁèæÂú®Âú∞ÂèñÂæóÁî®„ÅÆstate„ÇíÊõ¥Êñ∞„ÄÅÊ¨°Âõû„Åæ„ÅüÁèæÂú®Âú∞ÂèñÂæó„Åå„Åß„Åç„ÇãÊßò„Å´„Åô„Çã
                    handleClickFetchFilteredEvent();„ÄÄ// „Åì„Å£„Å°„ÅßÊ§úÁ¥¢ÁµêÊûú„Å´Âü∫„Å•„ÅÑ„ÅüAPI„ÅåËµ∞„Çã
                }} 
                variant="secondary" 
                style={{marginLeft: "auto"}}>
                    Ê§úÁ¥¢
            </Button>
            </Container>
            
        </Form>
    )
}

export default Filters;